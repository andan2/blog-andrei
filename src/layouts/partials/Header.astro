---
import menu from "@/config/menu.json";
import { Icon } from 'astro-icon/components';

const pathname = new URL(Astro.request.url).pathname;

export interface NavigationLink {
  name: string;
  url: string;
}

const { main }: { main: NavigationLink[] } = menu;
---

<header id="main-header" class="fixed top-0 left-0 right-0 z-50 transition-all duration-300">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <nav class="flex items-center justify-between h-20">
      <div class="flex-shrink-0 relative group">
        <div class="avatar cursor-pointer relative">
          <div class="w-12 h-12 rounded-full overflow-hidden">
            <img src="/images/logo.webp" alt="Avatar" class="w-full h-full object-cover" />
          </div>
          <div class="absolute top-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white"></div>
        </div>
        <ul id="avatar-menu" class="absolute left-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ease-in-out">
          <li>
            <a href="/" class="block px-4 py-2 text-sm text-gray-700 hover:text-blue-600 hover:bg-blue-100/50 hover:backdrop-blur-sm transition duration-150 ease-in-out font-medium">Inicio</a>
          </li>
          <li>
            <a href="https://planetaandrei.com/" target="_blank" rel="noopener noreferrer" class="block px-4 py-2 text-sm text-gray-700 hover:text-blue-600 hover:bg-blue-100/50 hover:backdrop-blur-sm transition duration-150 ease-in-out font-medium">Planeta Andrei</a>
          </li>
          <li>
            <a href="https://www.andreioctaviandanciulescu.com/" target="_blank" rel="noopener noreferrer" class="block px-4 py-2 text-sm text-gray-700 hover:text-blue-600 hover:bg-blue-100/50 hover:backdrop-blur-sm transition duration-150 ease-in-out font-medium">Mi Porfolio</a>
          </li>
        </ul>
      </div>
      
      <div class="hidden md:flex md:items-center md:justify-center flex-grow">
        {main.map((item) => (
          <div class="relative group px-2">
            <a href={item.url} class={`text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-base font-semibold transition duration-150 ease-in-out hover:bg-blue-100/50 hover:backdrop-blur-sm ${pathname === item.url ? 'text-blue-600 bg-blue-100/50 backdrop-blur-sm' : ''}`}>
              {item.name}
            </a>
          </div>
        ))}
      </div>
      
      <div class="hidden md:block">
        <a href="https://www.buymeacoffee.com/yourname" target="_blank" rel="noopener noreferrer" class="inline-flex items-center justify-center">
          <img src="https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" class="h-[38px] w-auto transition-all duration-300 ease-in-out transform hover:scale-105" />
        </a>
      </div>
      
      <div class="md:hidden">
        <button type="button" id="mobile-menu-button" class="text-gray-700 hover:text-blue-600 hover:bg-blue-100/50 hover:backdrop-blur-sm p-2 rounded-md">
          <span class="sr-only">Abrir menú</span>
          <Icon name="heroicons:bars-3" class="h-6 w-6" />
        </button>
      </div>
    </nav>
  </div>
  
  <!-- Menú móvil -->
  <div id="mobile-menu" class="md:hidden hidden fixed inset-0 z-40">
    <div class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm" id="mobile-menu-backdrop"></div>
    <div class="relative bg-white h-full w-64 max-w-sm py-4 px-3 overflow-y-auto">
      <div class="space-y-1">
        {main.map((item) => (
          <a href={item.url} class={`text-gray-700 hover:text-blue-600 hover:bg-blue-100/50 hover:backdrop-blur-sm block px-3 py-2 rounded-md text-base font-semibold transition duration-150 ease-in-out ${pathname === item.url ? 'text-blue-600 bg-blue-100/50 backdrop-blur-sm' : ''}`}>
            {item.name}
          </a>
        ))}
      </div>
      <div class="mt-6">
        <a href="https://www.buymeacoffee.com/yourname" target="_blank" rel="noopener noreferrer" class="block w-full">
          <img src="https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" class="h-[38px] w-auto mx-auto transition-all duration-300 ease-in-out transform hover:scale-105" />
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const header = document.getElementById('main-header');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuBackdrop = document.getElementById('mobile-menu-backdrop');
    const avatarMenu = document.getElementById('avatar-menu');
    const avatar = document.querySelector('.avatar');

    // Función para agregar el efecto de blur y fondo al hacer scroll
    const handleScroll = () => {
      if (header && !document.body.classList.contains('mobile-menu-open')) {
        if (window.scrollY > 0) {
          header.classList.add('bg-white/80', 'backdrop-blur-md', 'shadow-sm');
        } else {
          header.classList.remove('bg-white/80', 'backdrop-blur-md', 'shadow-sm');
        }
      }
    };

    // Agregar evento de scroll
    window.addEventListener('scroll', handleScroll);

    // Llamar a handleScroll inicialmente para establecer el estado correcto
    handleScroll();

    // Función para abrir/cerrar el menú móvil
    const toggleMobileMenu = () => {
      mobileMenu?.classList.toggle('hidden');
      document.body.classList.toggle('overflow-hidden');
      document.body.classList.toggle('mobile-menu-open');
      
      if (document.body.classList.contains('mobile-menu-open')) {
        header?.classList.remove('bg-white/80', 'backdrop-blur-md', 'shadow-sm');
        header?.classList.add('bg-transparent');
      } else {
        handleScroll(); // Restaura el estado del header basado en el scroll
      }
    };

    // Agregar eventos para el menú móvil
    mobileMenuButton?.addEventListener('click', toggleMobileMenu);
    mobileMenuBackdrop?.addEventListener('click', toggleMobileMenu);

    // Función para mostrar/ocultar el menú del avatar en dispositivos móviles
    const toggleAvatarMenu = () => {
      avatarMenu?.classList.toggle('hidden');
    };

    // Agregar evento para el menú del avatar en dispositivos móviles
    avatar?.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleAvatarMenu();
    });

    // Cerrar el menú del avatar al hacer clic fuera de él
    document.addEventListener('click', (e) => {
      if (!avatar?.contains(e.target as Node)) {
        avatarMenu?.classList.add('hidden');
      }
    });
  });
</script>

<style is:global>
  /* Asegura que siempre haya una barra de desplazamiento */
  html {
    overflow-y: scroll;
  }

  /* Ajusta el ancho del contenido para compensar la barra de desplazamiento */
  body {
    padding-top: 5rem; /* Ajusta este valor según la altura de tu header */
    width: calc(100vw - var(--scrollbar-width));
    overflow-x: hidden;
  }

  /* Calcula el ancho de la barra de desplazamiento */
  :root {
    --scrollbar-width: calc(100vw - 100%);
  }

  /* Estilos para el menú del avatar en dispositivos móviles */
  @media (max-width: 767px) {
    #avatar-menu {
      position: fixed;
      top: 5rem;
      left: 1rem;
      right: 1rem;
      background-color: white;
      border-radius: 0.375rem;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      z-index: 50;
    }
  }
</style>